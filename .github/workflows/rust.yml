name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Archive build
      run: tar -czvf linux-build.tar.gz target/release/
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: linux-build.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Archive build
      run: Compress-Archive -Path target/release/* -DestinationPath windows-build.zip
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: windows-build.zip

  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Archive build
      run: tar -czvf macos-build.tar.gz target/release/
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-build
        path: macos-build.tar.gz

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
    - uses: actions/checkout@v4
    - name: Download Linux build
      uses: actions/download-artifact@v3
      with:
        name: linux-build
        path: .
    - name: Download Windows build
      uses: actions/download-artifact@v3
      with:
        name: windows-build
        path: .
    - name: Download macOS build
      uses: actions/download-artifact@v3
      with:
        name: macos-build
        path: .
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false
    - name: Upload Linux Build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux-build.tar.gz
        asset_name: linux-build.tar.gz
        asset_content_type: application/gzip
    - name: Upload Windows Build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-build.zip
        asset_name: windows-build.zip
        asset_content_type: application/zip
    - name: Upload macOS Build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos-build.tar.gz
        asset_name: macos-build.tar.gz
        asset_content_type: application/gzip
